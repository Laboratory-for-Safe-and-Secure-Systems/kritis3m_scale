
syntax = "proto3";
option go_package = "github.com/Laboratory-for-Safe-and-Secure-Systems/kritis3m_scale/gen/go/v1";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";
enum ProxyType {
  FORWARD_PROXY = 0;
  REVERSE_PROXY = 1;
  TLS_TLS_PROXY = 2;
}
enum EntityType {
    NODE = 0;
    HWCONFIG = 1;
    PROXY = 2;
    GROUP = 3;
    EPCONFIG = 4;
    IDENTITY = 5;
    CERTIFICATE = 6;

}

message Entity{
    oneof entity{
        Node node = 1;
        HardwareConfig hwconfig =2;
        Proxy proxy = 3;
        Group group = 4;
        EndpointConfig epconfig = 5;
        Identity identity = 6;
    }
}

// Model definitions
message Node {
  uint32 id = 1;
  string serial_number = 2;
  uint32 node_network_index = 3;
  string locality = 4;
  repeated HardwareConfig hw_config = 6;
  repeated Proxy proxy = 7;
  string user_state = 8;
  string config_state = 9;
}

message HardwareConfig {
  uint32 id = 1;
  uint32 node_id = 2;
  string device = 3;
  string cidr = 4;
}

message Proxy {
  uint32 id = 1;
  uint32 node_id = 2;
  bool state = 3;
  ProxyType type = 4;
  string server_endpoint_addr = 5;
  string client_endpoint_addr = 6;
  uint32 group_id = 7;
}

message Group {
uint32 id = 1; 
uint32 loglevel = 2;
uint32 endpoint_config_id=3;
optional uint32 legacy_endpoint_config_id=4;
}

message EndpointConfig {
  uint32 id = 1;
  string name = 2;
  bool mutual_authentication = 3;
  bool no_encryption = 4;
  int32 kex = 5;
  string cipher = 6;
}

message Identity {
  uint32 id = 1;
  string server_url = 2;
  string revocation_list_url = 3;
}

message Certificate{
  uint32 id = 1;
}


/***------------------------ NORTHBOUND API ----------------------------*/
message GetRequest{
    uint32 id = 1;
    EntityType type = 2;
}
message GetResponse{
    Entity entity = 1;
}

message UpdateRequest{
    uint32 id = 1;
    EntityType type = 2;
    google.protobuf.Struct update_values = 3;
}
message UpdateResponse{
    Entity entity = 1;
}


message GetAllRequest{
    EntityType type = 1;
}
message GetAllResponse{
   repeated Entity entity = 1;
}

message AddRequest{
    EntityType type = 1;
    Entity entity = 2;
}
message AddResponse{
   Entity entity = 1;
}

message DeleteRequest{
    uint32 id = 1;
    EntityType type = 2;
}
message DeleteResponse{
    Entity entity = 1;
}

 

service Northbound{
    rpc Get(GetRequest) returns (GetResponse);
    rpc GetAll(GetAllRequest) returns (GetAllResponse);
    rpc Add(AddRequest) returns (AddResponse);
    rpc Update(google.protobuf.Empty ) returns (AddResponse);
    rpc Delete(DeleteRequest) returns (DeleteResponse);
}
/***------------------------ Core API ----------------------------*/


message NodeUpdateRequest{
  uint32 node_id =1;
}
message NodeUpdateResponse{
string status = 1;
}

message NetworkUpdateRequest{
  string response=1;
}
message NetworkUpdateResponse{
  string response=1;
}

message NodeHelloRequest{
  uint32 node_id=1;
}
message NodeHelloResponse{
string ok=1;}

service SDNcore{
  rpc NodeUpdate(NodeUpdateRequest) returns (NodeUpdateResponse);
  rpc NetworkUpdate(google.protobuf.Empty) returns (NetworkUpdateResponse);
  rpc NodeHello(NodeHelloRequest) returns (NodeHelloResponse);
}


message GroupConfig{
  repeated Proxy proxy=1;
  EndpointConfig epconfig =2;
  EndpointConfig legacy =3;
  Group group = 4;
}
message NodePubRequest{
  string serial_number=1;
  repeated HardwareConfig hwconfig = 2;
  repeated GroupConfig groupconfig = 3;
}
message NodePubResponse{
string status = 1;
}

message NodePubFleetRequest{
  repeated NodeUpdateRequest nodeupdate = 1;
}
message NodePubFleetResponse{
string status = 1;
}


service ControlPlane {
  
  rpc PubNode(NodePubRequest) returns (NodePubResponse);
  rpc PubFleet(NodePubFleetRequest) returns (NodePubFleetResponse);
}
